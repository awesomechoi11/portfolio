{"version":3,"sources":["reportWebVitals.js","loading.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","App","loadable","loadApp","this","load","args","ReactDOM","render","StrictMode","BottomScrollbar","document","getElementById","bind","totaldur","anime","timeline","add","delay","targets","easing","width","duration","stagger","translateY","bottom","opacity","complete","anim","style","pointerEvents","className","url","id","React","Component","Indletters","props","console","log","children","split","map","letter","index","float","LoadingMobile","md","MobileDetect","window","navigator","userAgent","mobile"],"mappings":"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","file":"static/js/main.d93ba879.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import loadable from '@loadable/component'\r\n//import { App, BottomScrollbar } from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './loading.scss';\r\nimport ReactFontLoader from 'react-font-loader'\r\nimport anime from 'animejs';\r\n\r\n\r\n\r\n/*\r\n\r\nApp.load().then((args) => {\r\n    console.log(args.App)\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n        <args.BottomScrollbar />\r\n        </React.StrictMode>,\r\n        document.getElementById('scrollbar')\r\n        );\r\n        ReactDOM.render(\r\n            <React.StrictMode>\r\n            <args.App />\r\n            </React.StrictMode>,\r\n            document.getElementById('root')\r\n            );\r\n        })\r\n        */\r\n\r\n\r\nexport class Loading extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.App = loadable(() => import('./App'))\r\n        this.loadApp = function () {\r\n            this.load().then((args) => {\r\n                ReactDOM.render(\r\n                    <React.StrictMode>\r\n                        <args.BottomScrollbar />\r\n                    </React.StrictMode>,\r\n                    document.getElementById('scrollbar')\r\n                );\r\n                ReactDOM.render(\r\n                    <React.StrictMode>\r\n                        <args.App />\r\n                    </React.StrictMode>,\r\n                    document.getElementById('root')\r\n                );\r\n            })\r\n        }.bind(this.App)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //setTimeout(this.loadApp, 1000)\r\n        this.loadApp();\r\n        const totaldur = 2000\r\n        anime.timeline({\r\n\r\n        }).add({\r\n            delay: totaldur / 3,\r\n            targets: '#name-underline',\r\n            easing: 'cubicBezier(.16,.69,.21,.99)',\r\n            //easing: 'linear',\r\n            width: ['0vw', '46.77083vw'],\r\n            duration: totaldur / 3\r\n        }).add({\r\n            targets: '.bchoiletter',\r\n            easing: 'cubicBezier(.16,.69,.21,.99)',\r\n            delay: anime.stagger(41),\r\n            translateY: ['20vw', '0vw'],\r\n            duration: totaldur / 3\r\n        }, totaldur / 3).add({\r\n            targets: '#intropage-inner',\r\n            easing: 'cubicBezier(.16,.69,.21,.99)',\r\n            'padding-left': ['26.614585vw', '3.4375vw'],\r\n            duration: totaldur / 3\r\n        }).add({\r\n            targets: '#scrollbar',\r\n            easing: 'cubicBezier(.16,.69,.21,.99)',\r\n            bottom: ['-80px', '0px'],\r\n            duration: totaldur / 3\r\n        }).add({\r\n            targets: '#loading',\r\n            easing: 'cubicBezier(.16,.69,.21,.99)',\r\n            opacity: [1, 0],\r\n            duration: totaldur / 3,\r\n            complete: function (anim) {\r\n                document.getElementById('loading').style.pointerEvents = 'none'\r\n            }\r\n        }, '-=' + totaldur / 3)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='loading'>\r\n                <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Scheherazade&family=Secular+One&family=Sen:wght@400;700&family=Staatliches&display=swap' />\r\n                <div className=\"intropage\">\r\n                    <div id='intropage-inner'>\r\n\r\n                        <span className=\"big-name\">\r\n                            <Indletters>\r\n                                Brandon Choi\r\n                           </Indletters>\r\n\r\n                        </span>\r\n                        <div id='name-underline'>\r\n                        </div>\r\n                        <div className=\"desc\">\r\n                            I am a Front-end developer, looking for a full time position.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nclass Indletters extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(this.props.children.split(''))\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={this.props.children}>\r\n                {this.props.children.split('').map((letter, index) => {\r\n                    if (letter === ' ') {\r\n                        return <div style={{ float: 'left' }} key={index} className='bchoiletter'> &nbsp;</div>\r\n                    }\r\n                    return <div style={{ float: 'left' }} key={index} className='bchoiletter'>{letter} </div>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class LoadingMobile extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.App = loadable(() => import('./mobile/mobileapp'))\r\n        this.loadApp = function () {\r\n            this.load().then((args) => {\r\n                ReactDOM.render(\r\n                    <React.StrictMode>\r\n                        <args.App />\r\n                    </React.StrictMode>,\r\n                    document.getElementById('root')\r\n                );\r\n            })\r\n        }.bind(this.App)\r\n        this.loadApp();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (// no loading animation for mobile users\r\n            <div className='mobileloading'>\r\n                <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Scheherazade&family=Secular+One&family=Sen:wght@400;700&family=Staatliches&display=swap' />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import reportWebVitals from './reportWebVitals';\nimport { Loading, LoadingMobile } from './loading';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MobileDetect from 'mobile-detect';\n\n//detect if mobile\n//then load respective versions\nvar md = new MobileDetect(window.navigator.userAgent);\nconsole.log(md.mobile())\n\nif (md.mobile()) {\n  //if (true) {\n  //if mobile\n  //remove lower bar\n  ReactDOM.render(\n    <React.StrictMode>\n      <LoadingMobile />\n    </React.StrictMode>,\n    document.getElementById('loading')\n  );\n} else {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Loading />\n    </React.StrictMode>,\n    document.getElementById('loading')\n  );\n}\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}